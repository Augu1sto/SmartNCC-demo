"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("../runtime");

var _default = (0, _runtime.IconWrapper)('barbecue', false, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("rect", {
    "attrs": {
      "x": "12",
      "y": "4",
      "width": "8",
      "height": "8",
      "rx": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "12",
      "y": "22",
      "width": "8",
      "height": "8",
      "rx": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "16",
      "y1": "31",
      "x2": "16",
      "y2": "44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "4",
      "width": "8",
      "height": "8",
      "rx": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "28",
      "y": "22",
      "width": "8",
      "height": "8",
      "rx": "4",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "32",
      "y1": "31",
      "x2": "32",
      "y2": "44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13 17H19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 17H35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M13 36H19",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M29 36H35",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("line", {
    "attrs": {
      "x1": "16",
      "y1": "14",
      "x2": "16",
      "y2": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("line", {
    "attrs": {
      "x1": "32",
      "y1": "14",
      "x2": "32",
      "y2": "20",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]);
});

exports.default = _default;