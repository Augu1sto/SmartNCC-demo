"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("../runtime");

var _default = (0, _runtime.IconWrapper)('tower-of-pisa', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("g", {
    "attrs": {
      "clip-path": 'url(#' + props.id + '726f248b' + ')'
    }
  }, [h("path", {
    "attrs": {
      "d": "M4 44H44",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M21.2498 7.47448L36.7046 11.6156L28.0004 43.9998L11.0004 43.9998L21.2498 7.47448Z",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19.3174 6.95703L38.6359 12.1334",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M16.2109 18.5479L35.5295 23.7242",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M25.4823 20.9316L26.5176 17.0679",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("path", {
    "attrs": {
      "d": "M13.1055 30.1392L32.424 35.3155",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M22.4823 31.9316L23.5176 28.0679",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  }), h("rect", {
    "attrs": {
      "x": "25.1826",
      "y": "4.38721",
      "width": "10",
      "height": "4",
      "rx": "1",
      "transform": "rotate(15 25.1826 4.38721)",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M19.4823 42.9316L20.5176 39.0679",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap
    }
  })]), h("defs", [h("clipPath", {
    "attrs": {
      "id": props.id + '726f248b'
    }
  }, [h("rect", {
    "attrs": {
      "width": "48",
      "height": "48",
      "fill": props.colors[2]
    }
  })])])]);
});

exports.default = _default;