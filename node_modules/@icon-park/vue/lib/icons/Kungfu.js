"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("../runtime");

var _default = (0, _runtime.IconWrapper)('kungfu', true, function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none"
    }
  }, [h("path", {
    "attrs": {
      "d": "M11 17C13.7614 17 16 14.7614 16 12C16 9.23858 13.7614 7 11 7C8.23858 7 6 9.23858 6 12C6 14.7614 8.23858 17 11 17Z",
      "fill": props.colors[1],
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2"
    }
  }), h("path", {
    "attrs": {
      "d": "M20 18L28 24L25 42",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 24L44 11",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("path", {
    "attrs": {
      "d": "M28 16.8L27 8L20 18L16 27L10 30",
      "stroke": props.colors[0],
      "stroke-width": props.strokeWidth,
      "stroke-miterlimit": "2",
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
});

exports.default = _default;